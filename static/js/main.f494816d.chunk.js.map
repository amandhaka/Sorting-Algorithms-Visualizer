{"version":3,"sources":["sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/selectionSort.js","SortingVisualizer.jsx","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/insertionSort.js","Popup.jsx","App.js","serviceWorker.js","index.js"],"names":["mergeSort","array","animations","length","auxiliaryArray","slice","mergeSortHelper","startIdx","endIdx","middleIdx","Math","floor","sortArray","console","log","i","j","push","doMerge","quickSort","auxiliary","quickSortHelper","startIndex","endIndex","pivotIndex","pivot","swap","partition","firstIndex","secondIndex","temp","minidx","SortingVisualizer","state","bgColor","this","resetArray","min","max","random","setState","selectionSort","colorChange","arrayBars","document","getElementsByClassName","barOne","barTwo","setTimeout","barOneStyle","style","barTwoStyle","color","background","newHeight","height","backgroud","bubbleSort","barThree","barThreeStyle","pivotColor","key","insertionSort","className","map","value","idx","width","overflowY","overflowX","display","borderRadius","boxShadow","onClick","Component","PopUp","props","modal","Modal","position","textAlign","left","top","transform","toggle","isOpen","ModalHeader","fontFamily","fontWeight","ModalBody","ModalFooter","Button","right","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oVAAO,SAASA,EAAUC,GACtB,IAAMC,EAAW,GACjB,GAAGD,EAAME,QAAQ,EAAG,OAAOF,EAC3B,IAAMG,EAAeH,EAAMI,QAE3B,OAIJ,SAASC,EACLC,EACAC,EACAJ,EACAF,GAEA,GAAGK,GAAUC,EAAQ,OACrB,IAAMC,EAAUC,KAAKC,OAAOJ,EAASC,GAAQ,GAC7CF,EAAgBC,EAASE,EAAUL,EAAeF,GAClDI,EAAgBG,EAAU,EAAED,EAAOJ,EAAeF,GAGtD,SACIK,EACAE,EACAD,EACAJ,EACAF,GAEA,IAAIU,EAAU,GACdC,QAAQC,IAAI,QAAQF,GACpBC,QAAQC,IAAI,OAAOV,GACnB,IAAIW,EAAER,EACFS,EAAEP,EAAU,EAChB,KAAMM,GAAGN,GAAaO,GAAGR,GACjBN,EAAWe,KAAK,CAACF,EAAEC,IACnBd,EAAWe,KAAK,CAACF,EAAEC,IACpBZ,EAAeW,IAAIX,EAAeY,IACjCd,EAAWe,KAAK,CAACL,EAAUT,OAAOI,EAASH,EAAeW,KAC1DH,EAAUK,KAAKb,EAAeW,QAG9Bb,EAAWe,KAAK,CAACL,EAAUT,OAAOI,EAASH,EAAeY,KAC1DJ,EAAUK,KAAKb,EAAeY,OAGtC,KAAMD,GAAGN,GACLP,EAAWe,KAAK,CAACF,EAAEA,IACnBb,EAAWe,KAAK,CAACF,EAAEA,IACnBb,EAAWe,KAAK,CAACL,EAAUT,OAAOI,EAASH,EAAeW,KAC1DH,EAAUK,KAAKb,EAAeW,MAElC,KAAMC,GAAGR,GACLN,EAAWe,KAAK,CAACD,EAAEA,IACnBd,EAAWe,KAAK,CAACD,EAAEA,IACnBd,EAAWe,KAAK,CAACL,EAAUT,OAAOI,EAASH,EAAeY,KAC1DJ,EAAUK,KAAKb,EAAeY,MAElC,IAAI,IAAID,EAAER,EAASQ,GAAGP,EAAOO,IACzBX,EAAeW,GAAGH,EAAUG,EAAER,GAElCM,QAAQC,IAAI,SAASF,GACrBC,QAAQC,IAAI,OAAOV,GA1CnBc,CAAQX,EAASE,EAAUD,EAAOJ,EAAeF,GAfjDI,CAAgB,EAAEL,EAAME,OAAO,EAAEC,EAAeF,GACzCA,ECLJ,SAASiB,EAAUlB,GACtB,IAAIC,EAAW,GACXkB,EAAUnB,EAAMI,QAEpB,OAEJ,SAASgB,EAAgBD,EAAUE,EAAWC,EAASrB,GAEnD,IAAIsB,EACDF,EAAWC,IACVC,EAMR,SAAmBJ,EAAUE,EAAWC,EAASrB,GAI7C,IAFA,IAAIsB,EAAWF,EACXG,EAAML,EAAUG,GACZR,EAAEO,EAAWP,EAAEQ,EAASR,IAC5Bb,EAAWe,KAAK,CAACF,EAAEQ,EAASC,IAC5BtB,EAAWe,KAAK,CAACF,EAAEQ,EAASC,IACzBJ,EAAUL,IAAIU,GACbvB,EAAWe,KAAK,CAACF,EAAEK,EAAUI,KAC7BtB,EAAWe,KAAK,CAACO,EAAWJ,EAAUL,KACtCW,EAAKN,EAAUL,EAAES,GACjBA,MAGAtB,EAAWe,KAAK,EAAE,GAAG,GAAG,IACxBf,EAAWe,KAAK,EAAE,GAAG,GAAG,KAE5Bf,EAAWe,KAAK,EAAE,GAAG,GAAG,IACxBf,EAAWe,KAAK,EAAE,GAAG,GAAG,IAS5B,OAPAf,EAAWe,KAAK,EAAE,GAAG,GAAG,IACxBf,EAAWe,KAAK,EAAE,GAAG,GAAG,IACxBf,EAAWe,KAAK,EAAE,GAAG,GAAG,IACxBf,EAAWe,KAAK,EAAE,GAAG,GAAG,IACxBf,EAAWe,KAAK,CAACO,EAAWJ,EAAUG,KACtCrB,EAAWe,KAAK,CAACM,EAASH,EAAUI,KACpCE,EAAKN,EAAUI,EAAWD,GACnBC,EAjCQG,CAAUP,EAAUE,EAAWC,EAASrB,GACnDmB,EAAgBD,EAAUE,EAAWE,EAAW,EAAEtB,GAClDmB,EAAgBD,EAAUI,EAAW,EAAED,EAASrB,IATpDmB,CAAgBD,EAAU,EAAEA,EAAUjB,OAAO,EAAED,GACxCA,EAyCX,SAASwB,EAAKN,EAAUQ,EAAWC,GAC/B,IAAIC,EAAKV,EAAUQ,GACnBR,EAAUQ,GAAYR,EAAUS,GAChCT,EAAUS,GAAaC,EC/B3B,SAASJ,EAAKK,EAAOhB,EAAEd,GACnB,IAAI6B,EAAK7B,EAAMc,GACfd,EAAMc,GAAGd,EAAM8B,GACf9B,EAAM8B,GAAQD,EC6MHE,M,kDAzNX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPhC,MAAO,GACPiC,QAAQ,IAJH,E,gEAQRC,KAAKC,e,mCAKL,IAFA,IAyLsBC,EAAIC,EAzLpBrC,EAAM,GAEJc,EAAE,EAAEA,EAAE,IAAIA,IACdd,EAAMgB,MAsLYoB,EAtLe,GAsLXC,EAtLc,IAwLtC5B,KAAKC,MAAMD,KAAK6B,UAAUD,EAAID,EAAI,GAAGA,KAtLvCF,KAAKK,SAAS,CAACvC,MAAMA,EAAMiC,QAJf,6H,sCAQZ,IADA,IAAMhC,ED3BR,SAAuBD,GAE1B,IADA,IAAMC,EAAW,GACTa,EAAE,EAAEA,EAAEd,EAAME,OAAO,EAAEY,IAAI,CAE7B,IADA,IAAIgB,EAAOhB,EACHC,EAAED,EAAE,EAAEC,EAAEf,EAAME,OAAOa,IACzBd,EAAWe,KAAK,CAAC,cAAcc,EAAOf,IACtCd,EAAWe,KAAK,CAAC,cAAcc,EAAOf,IACnCf,EAAM8B,GAAQ9B,EAAMe,KACnBe,EAAOf,GAGfd,EAAWe,KAAK,CAAC,YAAYc,EAAO9B,EAAMc,KAC1Cb,EAAWe,KAAK,CAAC,YAAYF,EAAEd,EAAM8B,KACrCL,EAAKK,EAAOhB,EAAEd,GAElB,OAAOC,ECYeuC,CAAcN,KAAKF,MAAMhC,OAD/B,WAEHc,GACJ,IAAM2B,EAAgC,gBAAnBxC,EAAWa,GAAG,IAAyC,gBAAnBb,EAAWa,GAAG,GAC/D4B,EAAUC,SAASC,uBAAuB,aAChD,GAAGH,EAAY,CAAC,IAAD,cACgBxC,EAAWa,GAD3B,GACJe,EADI,KACCgB,EADD,KACQC,EADR,KAEXC,YAAW,WACR,IAAMC,EAAYN,EAAUG,GAAQI,MAC9BC,EAAYR,EAAUI,GAAQG,MAC9BE,EAAc,gBAAPtB,EAAsB,MAAM,UACxCmB,EAAYI,WAAWD,EACvBD,EAAYE,WAAWD,IACvB,EAAFrC,OAEF,CAAC,IAAD,cAC6Bb,EAAWa,GADxC,GACW+B,GADX,WACkBQ,EADlB,KAEML,EAAYN,EAAUG,GAAQI,MACpCF,YAAW,WACPC,EAAYM,OAAOD,EAAU,OAC7B,EAAFvC,KAlBFA,EAAE,EAAEA,EAAEb,EAAWC,OAAOY,IAAK,EAA7BA,K,kCA2BR,IADA,IAAMb,EAAWF,EAAUmC,KAAKF,MAAMhC,OAJ/B,WAKCc,GACJ,IAAM4B,EAAWC,SAASC,uBAAuB,aAEjD,GADkB9B,EAAE,IAAI,EACT,CAAC,IAAD,cACab,EAAWa,GADxB,GACJ+B,EADI,KACGC,EADH,KAELE,EAAYN,EAAUG,GAAQI,MAC9BC,EAAYR,EAAUI,GAAQG,MAC9BE,EAAMrC,EAAE,IAAI,EAAE,MAAM,UAC1BiC,YAAW,WACRC,EAAYI,WAAWD,EACvBD,EAAYK,UAAUJ,IACrB,EAAFrC,QAGFiC,YAAW,WAAK,IAAD,cACY9C,EAAWa,GADvB,GACN+B,EADM,KACCQ,EADD,KAEMX,EAAUG,GAAQI,MACxBK,OAAOD,EAAU,OAC5B,EAAFvC,IAlBFA,EAAE,EAAEA,EAAEb,EAAWC,OAAOY,IAAK,EAA7BA,K,mCA4BR,IAFA,IAAMb,ECjFR,SAAoBD,GAE3B,IADA,IAAMC,EAAW,GACTa,EAAE,EAAEA,EAAEd,EAAME,OAAO,EAAEY,IACzB,IAAI,IAAIC,EAAE,EAAEA,EAAEf,EAAME,OAAOY,EAAE,EAAEC,IAG3B,GAFAd,EAAWe,KAAK,CAACD,EAAEA,EAAE,IACrBd,EAAWe,KAAK,CAACD,EAAEA,EAAE,IAClBf,EAAMe,GAAGf,EAAMe,EAAE,GAAG,CACnBd,EAAWe,KAAK,CAACD,EAAEf,EAAMe,EAAE,KAC3Bd,EAAWe,KAAK,CAACD,EAAE,EAAEf,EAAMe,KAC3B,IAAIc,EAAK7B,EAAMe,EAAE,GACjBf,EAAMe,EAAE,GAAGf,EAAMe,GACjBf,EAAMe,GAAGc,OAGT5B,EAAWe,KAAK,EAAE,GAAG,IACrBf,EAAWe,KAAK,EAAE,GAAG,IAIjC,OAAOf,ED8DmBuD,CAAWtB,KAAKF,MAAMhC,OAJ/B,WAMAc,GACJ,IAAM4B,EAAUC,SAASC,uBAAuB,aAEhD,IAAiB,KADE9B,EAAE,IAAI,GAAKA,EAAE,IAAI,GACd,CAAC,IAAD,cACIb,EAAWa,GADf,GACX+B,EADW,KACJC,EADI,KAElB,IAAa,IAAVD,EACC,iBAEJ,IAAMG,EAAYN,EAAUG,GAAQI,MAC9BC,EAAYR,EAAUI,GAAQG,MAC9BE,EAAMrC,EAAE,IAAI,EAAE,MAAM,UAC1BiC,YAAW,WACPC,EAAYO,UAAUJ,EACtBD,EAAYE,WAAWD,IACvB,EAAFrC,QAGFiC,YAAW,WAAK,IAAD,cACa9C,EAAWa,GADxB,GACL+B,EADK,KACEQ,EADF,MAEE,IAAVR,IACeH,EAAUG,GAAQI,MACxBK,OAAOD,EAAU,QAE7B,EAAFvC,IAvBFA,EAAE,EAAEA,EAAEb,EAAWC,OAAOY,IAAI,EAA5BA,K,kCA8BR,IADA,IAAMb,EAAWiB,EAAUgB,KAAKF,MAAMhC,OAC9Bc,EAAE,EAAEA,EAAEb,EAAWC,OAAO,EAAEY,IAAI,CAClC,IAAM4B,EAAUC,SAASC,uBAAuB,aAEhD,IAAiB,KADI9B,EAAE,IAAI,GAAOA,EAAE,IAAI,IAClB,6CACab,EAAWa,GADxB,GACZ+B,EADY,KACLC,EADK,KACEW,EADF,KAElB,IAAa,IAAVZ,IAAyB,IAAVC,EACd,iBAEJ,IAAME,EAAYN,EAAUG,GAAQI,MAC9BC,EAAYR,EAAUI,GAAQG,MAC9BS,EAAchB,EAAUe,GAAUR,MACpCE,EAAMrC,EAAE,IAAI,EAAE,MAAM,UACpB6C,EAAW7C,EAAE,IAAI,EAAE,SAAS,UAChCiC,YAAW,WACPC,EAAYI,WAAWD,EACvBD,EAAYE,WAAWD,EACvBO,EAAcN,WAAWO,IACzB,EAAF7C,GAdgB,GAGd,cAaJ,6CACwBb,EAAWa,GADnC,GACM+B,EADN,KACaQ,EADb,KAEA,IAAa,IAAVR,EACC,iBAEJ,IAAMG,EAAYN,EAAUG,GAAQI,MACpCF,YAAW,WACPC,EAAYM,OAAOD,EAAU,OAC7B,EAAFvC,GARF,GAGI,Y,sCAWZ,IADA,IAAMb,EEjJR,SAAuBD,GAC1B,IAAMC,EAAW,GACjB,GAAGD,EAAME,QAAQ,EAAG,OAAOF,EAC3B,IAAI,IAAIc,EAAE,EAAEA,EAAEd,EAAME,OAAOY,IAAI,CAC3B,IAAI8C,EAAI5D,EAAMc,GACVC,EAAED,EAAE,EAGR,IAFAb,EAAWe,KAAK,CAAC,cAAcD,EAAED,IACjCb,EAAWe,KAAK,CAAC,cAAcD,EAAED,IAC3BC,GAAG,GAAKf,EAAMe,GAAG6C,GACnB3D,EAAWe,KAAK,CAAC,YAAYD,EAAE,EAAEf,EAAMe,KACvCf,EAAMe,EAAE,GAAGf,EAAMe,IACjBA,GAAI,IACE,IACFd,EAAWe,KAAK,CAAC,cAAcD,EAAED,IACjCb,EAAWe,KAAK,CAAC,cAAcD,EAAED,KAGzCb,EAAWe,KAAK,CAAC,YAAYD,EAAE,EAAE6C,IACjC5D,EAAMe,EAAE,GAAG6C,EAEf,OAAO3D,EF6He4D,CAAc3B,KAAKF,MAAMhC,OAD/B,WAEHc,GACJ,IAAM2B,EAAgC,gBAAnBxC,EAAWa,GAAG,IAAyC,gBAAnBb,EAAWa,GAAG,GAC/D4B,EAAUC,SAASC,uBAAuB,aAChD,GAAGH,EAAY,CAAC,IAAD,cACexC,EAAWa,GAD1B,GACLe,EADK,KACAgB,EADA,KACOC,EADP,KAELK,EAAc,gBAAPtB,EAAsB,MAAM,UACzCkB,YAAW,WACP,IAAMC,EAAYN,EAAUG,GAAQI,MAC9BC,EAAYR,EAAUI,GAAQG,MACpCD,EAAYI,WAAWD,EACvBD,EAAYE,WAAWD,IACvB,EAAFrC,OAEF,CAAC,IAAD,cAC6Bb,EAAWa,GADxC,GACW+B,GADX,WACkBQ,EADlB,KAEAN,YAAW,WACUL,EAAUG,GAAQI,MACxBK,OAAOD,EAAU,OAC5B,EAAFvC,KAlBFA,EAAE,EAAEA,EAAEb,EAAWC,OAAOY,IAAK,EAA7BA,K,+BAuBH,IAAD,SACiBoB,KAAKF,MAApBhC,EADF,EACEA,MAAMiC,EADR,EACQA,QAWb,OACI,yBAAK6B,UAAU,mBAEP9D,EAAM+D,KAAI,SAACC,EAAMC,GAAP,OACN,yBACAH,UAAU,yCACVF,IAAKK,EACLhB,MAAO,CAACK,OAAQU,EAAMZ,WAAWnB,QAGzC,yBAAK6B,UAAU,OAAOb,MApBnB,CACPK,OAAO,OACPY,MAAM,OACNC,UAAU,SACVC,UAAU,SACVhB,WAAW,2EACXiB,QAAQ,eACRC,aAAa,OACbC,UAAU,SAaN,4BAAQT,UAAU,oDAAoDb,MAAO,CAACqB,aAAa,QAASE,QAAS,kBAAI,EAAKrC,eAAtH,sBACA,4BAAQ2B,UAAU,iDAAiDb,MAAO,CAACqB,aAAa,QAASE,QAAS,kBAAI,EAAKzE,cAAnH,cACA,4BAAQ+D,UAAU,iDAAiDb,MAAO,CAACqB,aAAa,QAASE,QAAS,kBAAI,EAAKhB,eAAnH,eACA,4BAAQM,UAAU,iDAAiDb,MAAO,CAACqB,aAAa,QAASE,QAAS,kBAAI,EAAKtD,cAAnH,cACA,4BAAQ4C,UAAU,iDAAiDb,MAAO,CAACqB,aAAa,QAASE,QAAS,kBAAI,EAAKX,kBAAnH,kBACA,4BAAQC,UAAU,iDAAiDb,MAAO,CAACqB,aAAa,QAASE,QAAS,kBAAI,EAAKhC,kBAAnH,wB,GA9LgBiC,a,gDGqCjBC,E,kDAzCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACD3C,MAAM,CACP4C,OAAM,GAHI,E,qDAQV1C,KAAKK,SAAS,CAACqC,OAAO1C,KAAKF,MAAM4C,U,+BAE/B,IAAD,OASL,OACI,6BACI,kBAACC,EAAA,EAAD,CAAO5B,MAVJ,CACP6B,SAAS,WACTC,UAAU,SACVC,KAAK,MACLC,IAAI,MACJf,MAAM,OACNgB,UAAU,wBAIgBC,OAAQ,kBAAI,EAAKA,UAAUC,OAAQlD,KAAKF,MAAM4C,OAChE,kBAACS,EAAA,EAAD,CAAapC,MAAO,CAACqC,WAAY,sBAAsBC,WAAW,QAAlE,qBACA,kBAACC,EAAA,EAAD,CAAWvC,MAAO,CAACqC,WAAW,2BAA9B,OACQ,6BADR,oIAIQ,6BACJ,qGAAgF,6BALpF,qJASA,kBAACG,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQlB,QAAS,kBAAI,EAAKW,UAAUhC,MAAM,SAASF,MAAO,CAACiB,MAAM,OAAOyB,MAAM,IAAIZ,UAAU,WAA5F,gB,GAlCAN,aCeLmB,G,6KARX,OACE,yBAAK9B,UAAU,QACf,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALYW,cCKEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzD,SAAS0D,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjG,QAAQiG,MAAMA,EAAMC,c","file":"static/js/main.f494816d.chunk.js","sourcesContent":["export function mergeSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    const auxiliaryArray=array.slice();\r\n    mergeSortHelper(0,array.length-1,auxiliaryArray,animations);\r\n    return animations;\r\n}\r\n// 3 2 1\r\n\r\nfunction mergeSortHelper(\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations\r\n){\r\n    if(startIdx==endIdx) return ;\r\n    const middleIdx=Math.floor((startIdx+endIdx)/2);\r\n    mergeSortHelper(startIdx,middleIdx,auxiliaryArray,animations);\r\n    mergeSortHelper(middleIdx+1,endIdx,auxiliaryArray,animations);\r\n    doMerge(startIdx,middleIdx,endIdx,auxiliaryArray,animations);\r\n}\r\nfunction doMerge(\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations\r\n){\r\n    let sortArray=[];\r\n    console.log(\"First\",sortArray);\r\n    console.log(\"Auxi\",auxiliaryArray);\r\n    let i=startIdx;\r\n    let j=middleIdx+1;\r\n    while(i<=middleIdx && j<=endIdx){\r\n            animations.push([i,j]);\r\n            animations.push([i,j]);\r\n        if(auxiliaryArray[i]<=auxiliaryArray[j]){\r\n            animations.push([sortArray.length+startIdx,auxiliaryArray[i]]);\r\n            sortArray.push(auxiliaryArray[i++]);\r\n        }\r\n        else{\r\n            animations.push([sortArray.length+startIdx,auxiliaryArray[j]]);\r\n            sortArray.push(auxiliaryArray[j++]);\r\n        }\r\n    }\r\n    while(i<=middleIdx){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n        animations.push([sortArray.length+startIdx,auxiliaryArray[i]]);\r\n        sortArray.push(auxiliaryArray[i++]);\r\n        }\r\n    while(j<=endIdx){\r\n        animations.push([j,j]);\r\n        animations.push([j,j]);\r\n        animations.push([sortArray.length+startIdx,auxiliaryArray[j]])\r\n        sortArray.push(auxiliaryArray[j++]);    \r\n    }\r\n    for(let i=startIdx;i<=endIdx;i++){\r\n        auxiliaryArray[i]=sortArray[i-startIdx];\r\n    }\r\n    console.log(\"second\",sortArray);\r\n    console.log(\"Auxi\",auxiliaryArray);\r\n}","export function quickSort(array){\r\n    let animations=[];\r\n    let auxiliary=array.slice();\r\n    quickSortHelper(auxiliary,0,auxiliary.length-1,animations);\r\n    return animations;\r\n}\r\nfunction quickSortHelper(auxiliary,startIndex,endIndex,animations)\r\n{\r\n    let pivotIndex;\r\n    if(startIndex<endIndex){\r\n        pivotIndex=partition(auxiliary,startIndex,endIndex,animations);\r\n        quickSortHelper(auxiliary,startIndex,pivotIndex-1,animations);\r\n        quickSortHelper(auxiliary,pivotIndex+1,endIndex,animations);\r\n    }\r\n\r\n}\r\nfunction partition(auxiliary,startIndex,endIndex,animations) \r\n{\r\n    let pivotIndex=startIndex;\r\n    let pivot=auxiliary[endIndex];\r\n    for(let i=startIndex;i<endIndex;i++){\r\n        animations.push([i,endIndex,pivotIndex]);\r\n        animations.push([i,endIndex,pivotIndex]);\r\n        if(auxiliary[i]<=pivot){\r\n            animations.push([i,auxiliary[pivotIndex]]);\r\n            animations.push([pivotIndex,auxiliary[i]]);\r\n            swap(auxiliary,i,pivotIndex);\r\n            pivotIndex++;\r\n        }\r\n        else{\r\n            animations.push([-1,-1,-1]);\r\n            animations.push([-1,-1,-1]);\r\n        }\r\n        animations.push([-1,-1,-1]);\r\n        animations.push([-1,-1,-1]);\r\n    }\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([pivotIndex,auxiliary[endIndex]]);\r\n    animations.push([endIndex,auxiliary[pivotIndex]]);\r\n    swap(auxiliary,pivotIndex,endIndex);\r\n    return pivotIndex;\r\n}\r\nfunction swap(auxiliary,firstIndex,secondIndex){\r\n    let temp=auxiliary[firstIndex];\r\n    auxiliary[firstIndex]=auxiliary[secondIndex];\r\n    auxiliary[secondIndex]=temp;\r\n}","export function selectionSort(array){\r\n    const animations=[];\r\n    for(let i=0;i<array.length-1;i++){\r\n        let minidx=i;\r\n        for(let j=i+1;j<array.length;j++){\r\n            animations.push([\"comparison1\",minidx,j]);\r\n            animations.push([\"comparison2\",minidx,j]);\r\n            if(array[minidx]>array[j]){\r\n                minidx=j;\r\n            }\r\n        }\r\n        animations.push([\"overwrite\",minidx,array[i]]);\r\n        animations.push([\"overwrite\",i,array[minidx]]);\r\n        swap(minidx,i,array);\r\n    }\r\n    return animations;\r\n}\r\nfunction swap(minidx,i,array){\r\n    let temp=array[i];\r\n    array[i]=array[minidx];\r\n    array[minidx]=temp;\r\n}","import React, { Component } from 'react';\r\nimport './SortingVisualizer.css';\r\nimport {mergeSort} from './sortingAlgorithms/mergeSort';\r\nimport {bubbleSort} from './sortingAlgorithms/bubbleSort';\r\nimport {quickSort} from './sortingAlgorithms/quickSort';\r\nimport {insertionSort} from './sortingAlgorithms/insertionSort';\r\nimport {selectionSort} from './sortingAlgorithms/selectionSort';\r\nclass SortingVisualizer extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            array: [],\r\n            bgColor:\"\",\r\n        }\r\n    }\r\n     componentDidMount(){\r\n         this.resetArray();\r\n     }\r\n     resetArray(){\r\n         const array=[];\r\n         const color='radial-gradient(circle, rgba(146,37,189,1) 9%, rgba(146,37,189,1) 40%, rgba(144,40,190,1) 42%, rgba(116,85,205,1) 85%)';\r\n         for(let i=0;i<250;i++){\r\n             array.push(randomIntFromInterval(15,650));\r\n         }\r\n         this.setState({array:array,bgColor:color});\r\n     }\r\n     selectionSort(){\r\n         const animations=selectionSort(this.state.array);\r\n         for(let i=0;i<animations.length;i++){\r\n             const colorChange=(animations[i][0]===\"comparison1\" || animations[i][0]===\"comparison2\");\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             if(colorChange){\r\n                 const [temp,barOne,barTwo]=animations[i];\r\n                 setTimeout(()=>{\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    const barTwoStyle=arrayBars[barTwo].style;\r\n                    const color=(temp===\"comparison1\")?'red':'#3498DB';\r\n                     barOneStyle.background=color;\r\n                     barTwoStyle.background=color;\r\n                 },i*5);\r\n             }\r\n             else{\r\n                 const[temp,barOne,newHeight]=animations[i];\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 setTimeout(()=>{\r\n                     barOneStyle.height=newHeight+'px';\r\n                 },i*5);\r\n             }\r\n         }\r\n     }\r\n     mergeSort(){\r\n         //const sorted=mergeSort(this.state.array);\r\n         //const jsorted=this.state.array.sort(function(a,b){return a-b});\r\n         //console.log(arrayAreEqual(sorted,jsorted));\r\n         const animations=mergeSort(this.state.array);\r\n         for(let i=0;i<animations.length;i++){\r\n             const arrayBars= document.getElementsByClassName('array-bar');\r\n             const colorChange=i%3!==2;\r\n             if(colorChange){\r\n                 const [barOne,barTwo] = animations[i];\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 const barTwoStyle=arrayBars[barTwo].style;\r\n                 const color=i%3===0?'red':'#3498DB';\r\n                 setTimeout(()=>{\r\n                    barOneStyle.background=color;\r\n                    barTwoStyle.backgroud=color;\r\n                 },i*2);\r\n             }\r\n             else{\r\n                 setTimeout(()=>{\r\n                    const[barOne,newHeight]=animations[i];\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    barOneStyle.height=newHeight+'px';\r\n                 },i*2)\r\n             }\r\n         }\r\n    }\r\n     bubbleSort(){\r\n         //const sorted=bubbleSort(this.state.array);\r\n         //const jsorted=this.state.array.sort(function(a,b){return a-b});\r\n         //console.log(arrayAreEqual(sorted,jsorted));\r\n         const animations=bubbleSort(this.state.array);\r\n         //console.log(animations);\r\n         for(let i=0;i<animations.length;i++){\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             const colorChange= i%4===0 || i%4===1;\r\n             if(colorChange===true){\r\n                 const [barOne,barTwo]=animations[i];\r\n                 if(barOne===-1){\r\n                     continue;\r\n                 }\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 const barTwoStyle=arrayBars[barTwo].style;\r\n                 const color=i%4===0?'red':'#3498DB';\r\n                 setTimeout(()=>{\r\n                     barOneStyle.backgroud=color;\r\n                     barTwoStyle.background=color;\r\n                 },i*3);\r\n             }\r\n             else{\r\n                 setTimeout(()=>{\r\n                     const[barOne,newHeight]=animations[i];\r\n                     if(barOne!==-1){\r\n                     const barOneStyle=arrayBars[barOne].style;\r\n                     barOneStyle.height=newHeight+'px';\r\n                     }\r\n                 },i*3);\r\n             }\r\n         }\r\n         \r\n     }\r\n     quickSort(){\r\n         const animations=quickSort(this.state.array);\r\n         for(let i=0;i<animations.length-1;i++){\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             const colorChange = (i%6===0) || (i%6===1);\r\n             if(colorChange===true){\r\n                 const[barOne,barTwo,barThree]= animations[i];\r\n                 if(barOne===-1 || barTwo===-1){\r\n                     continue;\r\n                 }\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 const barTwoStyle=arrayBars[barTwo].style;\r\n                 const barThreeStyle=arrayBars[barThree].style;\r\n                 let color=i%6===0?'red':'#3498DB';\r\n                 let pivotColor=i%6===0?'yellow':'#3498DB';\r\n                 setTimeout(()=>{\r\n                     barOneStyle.background=color;\r\n                     barTwoStyle.background=color;\r\n                     barThreeStyle.background=pivotColor;\r\n                 },i*5);\r\n             }\r\n             else{\r\n                 const[barOne,newHeight]=animations[i];\r\n                 if(barOne===-1 ){\r\n                     continue;\r\n                 }\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 setTimeout(()=>{\r\n                     barOneStyle.height=newHeight+'px';\r\n                 },i*5);\r\n             }\r\n         }\r\n     }\r\n     insertionSort(){\r\n         const animations=insertionSort(this.state.array);\r\n         for(let i=0;i<animations.length;i++){\r\n             const colorChange=(animations[i][0]===\"comparison1\" || animations[i][0]===\"comparison2\");\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             if(colorChange){\r\n                 const[temp,barOne,barTwo]=animations[i];\r\n                 const color=(temp===\"comparison1\")?'red':'#3498DB';\r\n                 setTimeout(()=>{\r\n                     const barOneStyle=arrayBars[barOne].style;\r\n                     const barTwoStyle=arrayBars[barTwo].style;\r\n                     barOneStyle.background=color;\r\n                     barTwoStyle.background=color;                     \r\n                 },i*5)\r\n             }\r\n             else{\r\n                 const[temp,barOne,newHeight]=animations[i];\r\n                 setTimeout(()=>{\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    barOneStyle.height=newHeight+'px';\r\n                 },i*5);\r\n             }\r\n         }\r\n\r\n     }\r\n    render() {\r\n        const {array,bgColor}=this.state;\r\n        let styles={\r\n            height:'60px',\r\n            width:'85vw',\r\n            overflowY:'hidden',\r\n            overflowX:'hidden',\r\n            background:'linear-gradient(90deg, rgba(243,243,255,1) 8%, rgba(169,232,242,1) 100%)',\r\n            display:'inline-block',\r\n            borderRadius:'50px',\r\n            boxShadow:'50px',\r\n        };\r\n        return (\r\n            <div className=\"array-container\">\r\n                {\r\n                    array.map((value,idx) => (\r\n                        <div \r\n                        className=\"array-bar animated bounceInUp delay 2s\"\r\n                        key={idx}\r\n                        style={{height: value,background:bgColor}}></div>\r\n                    ))\r\n                }\r\n                <div className=\"card\" style={styles} >\r\n                <button className=\"btn btn-success m-2 animated slideInLeft delay 9s\" style={{borderRadius:'30px'}} onClick={()=>this.resetArray()}>Generate new Array</button>\r\n                <button className=\"btn btn-info m-2 animated slideInLeft delay 7s\" style={{borderRadius:'30px'}} onClick={()=>this.mergeSort()}>Merge Sort</button>\r\n                <button className=\"btn btn-info m-2 animated slideInLeft delay 5s\" style={{borderRadius:'30px'}} onClick={()=>this.bubbleSort()}>Bubble Sort</button>\r\n                <button className=\"btn btn-info m-2 animated slideInLeft delay 3s\" style={{borderRadius:'30px'}} onClick={()=>this.quickSort()} >Quick Sort</button>\r\n                <button className=\"btn btn-info m-2 animated slideInLeft delay 1s\" style={{borderRadius:'30px'}} onClick={()=>this.insertionSort()}>Insertion Sort</button>\r\n                <button className=\"btn btn-info m-2 animated slideInLeft delay 0s\" style={{borderRadius:'30px'}} onClick={()=>this.selectionSort()}>Selection Sort</button>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min,max){\r\n    //min and max included\r\n    return Math.floor(Math.random()*(max-min+1)+min);\r\n}\r\n/* For Testing Purpose\r\nfunction arrayAreEqual(sorted,jsorted){\r\n    if(sorted.length!==jsorted.length){\r\n        console.log('length');\r\n        return false;\r\n    };\r\n    let i=0;\r\n    let j=0;\r\n    while(i<sorted.length && j<jsorted.length){\r\n        if(sorted[i]!==jsorted[j])\r\n        return false;\r\n        i++;\r\n        j++;\r\n    }\r\n    return true;\r\n} */\r\n \r\nexport default SortingVisualizer;","export function bubbleSort(array){\r\nconst animations=[];\r\nfor(let i=0;i<array.length-1;i++){\r\n    for(let j=0;j<array.length-i-1;j++){\r\n        animations.push([j,j+1]);\r\n        animations.push([j,j+1]);\r\n        if(array[j]>array[j+1]){\r\n            animations.push([j,array[j+1]]);\r\n            animations.push([j+1,array[j]]);\r\n            let temp=array[j+1];\r\n            array[j+1]=array[j];\r\n            array[j]=temp;\r\n        }\r\n        else{\r\n            animations.push([-1,-1]);\r\n            animations.push([-1,-1]);\r\n        }\r\n    }\r\n}\r\nreturn animations;\r\n}\r\n// 3 4 2 1 5 6\r\n//{0,3}{1,4}","export function insertionSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    for(let i=1;i<array.length;i++){\r\n        let key=array[i];\r\n        let j=i-1;\r\n        animations.push([\"comparison1\",j,i]);\r\n        animations.push([\"comparison2\",j,i]);\r\n        while(j>=0 && array[j]>key){\r\n            animations.push([\"overwrite\",j+1,array[j]]);\r\n            array[j+1]=array[j];\r\n            j=j-1;\r\n            if(j>=0){\r\n                animations.push([\"comparison1\",j,i]);\r\n                animations.push([\"comparison2\",j,i]);\r\n            }\r\n        }\r\n        animations.push([\"overwrite\",j+1,key]);\r\n        array[j+1]=key;\r\n    }\r\n    return animations;\r\n}","import React, { Component } from 'react';\r\nimport {Button,Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nclass PopUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            modal:true,\r\n        }\r\n    }\r\n    toggle() \r\n        {\r\n            this.setState({modal:!this.state.modal});\r\n        }\r\n    render() {\r\n        let styles={\r\n            position:\"absolute\",\r\n            textAlign:\"center\",\r\n            left:\"50%\",\r\n            top:\"50%\",\r\n            width:\"40vw\",\r\n            transform:\"translate(-50%,-50%)\",\r\n        }\r\n        return ( \r\n            <div>\r\n                <Modal style={styles} toggle={()=>this.toggle()} isOpen={this.state.modal}>\r\n                    <ModalHeader style={{fontFamily: \"'Anton', sans-serif\",fontWeight:'900'}}>Sorting Algorithm</ModalHeader>\r\n                    <ModalBody style={{fontFamily:\"'Rajdhani', sans-serif\"}}>\r\n                        Hey!<br></br>\r\n                        This is a Sorting Algorithms Visualizer built using reactjs.\r\n                        You can see how some of the most famous sorting algorithms work\r\n                        i.e.<br></br>\r\n                        <code>Bubble Sort, Merge Sort, Insertion Sort, Quick Sort, Selection Sort</code><br></br>\r\n                        You can generate new array using \"Generate New Array\" button everytime and choose your sorting algorithm\r\n                        to sort the bars and see how it is done.\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button onClick={()=>this.toggle()} color=\"danger\" style={{width:'60px',right:'0',textAlign:'center'}}>Close</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PopUp;","import {Component} from 'react';\nimport React from 'react';\nimport SortingVisualizer from './SortingVisualizer';\nimport './bootstrap/dist/css/bootstrap.min.css'\nimport PopUp from './Popup.jsx'\nimport './App.css';\n\nclass App extends Component {\n  render() { \n    return ( \n      <div className=\"App \">\n      <SortingVisualizer></SortingVisualizer>\n      <PopUp/>\n    </div>\n     );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}