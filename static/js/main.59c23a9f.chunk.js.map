{"version":3,"sources":["sortingAlgorithms/heapSort.js","sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/selectionSort.js","SortingVisualizer.jsx","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/insertionSort.js","Popup.jsx","App.js","serviceWorker.js","index.js"],"names":["array_length","mergeSort","array","animations","length","auxiliaryArray","slice","mergeSortHelper","startIdx","endIdx","helper","middleIdx","Math","floor","current","i","low","mid","push","remaining","j","l","merge","quickSort","auxiliary","quickSortHelper","startIndex","endIndex","pivotIndex","pivot","swap","partition","firstIndex","secondIndex","temp","minidx","heap_root","arr","left","right","max","index_A","index_B","SortingVisualizer","state","bgColor","backgroud","this","resetArray","min","random","setState","document","getElementById","disabled","disableButtons","selectionSort","colorChange","arrayBars","getElementsByClassName","barOne","barTwo","setTimeout","barOneStyle","style","barTwoStyle","color","background","newHeight","height","timeout","restoreButtons","bubbleSort","barThree","barThreeStyle","pivotColor","key","insertionSort","heapSort","console","log","backgroundColor","className","map","value","idx","width","overflowY","overflowX","display","borderRadius","boxShadow","id","onClick","Component","PopUp","props","modal","Modal","position","textAlign","top","transform","toggle","isOpen","ModalHeader","fontFamily","fontWeight","ModalBody","ModalFooter","Button","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.59c23a9f.chunk.js","sourcesContent":["var array_length;  \r\nconst animations=[];\r\nfunction heap_root(arr, i) {\r\n    var left = 2 * i + 1;\r\n    var right = 2 * i + 2;\r\n    var max = i;\r\n    if(left<array_length){\r\n        animations.push([\"compare1\",left,max]);\r\n        animations.push([\"compare2\",left,max]);\r\n    }\r\n    if (left < array_length && arr[left] > arr[max]) {\r\n        max = left;\r\n    }\r\n    if(right<array_length){\r\n        animations.push([\"compare1\",right,max]);\r\n        animations.push([\"compare2\",right,max]);\r\n    }\r\n    if (right < array_length && arr[right] > arr[max])     {\r\n        max = right;\r\n    }\r\n\r\n    if (max != i) {\r\n        animations.push([\"swap\",i,arr[max]]);\r\n        animations.push([\"swap\",max,arr[i]]);\r\n        swap(arr, i, max);\r\n        heap_root(arr, max);\r\n    }\r\n}\r\nfunction swap(arr, index_A, index_B) {\r\n    var temp = arr[index_A];\r\n    arr[index_A] = arr[index_B];\r\n    arr[index_B] = temp;\r\n}\r\n\r\nexport function heapSort(arr) {\r\n    array_length = arr.length;\r\n\r\n    for (var i = Math.floor(array_length / 2); i >= 0; i -= 1)      {\r\n        heap_root(arr, i);\r\n      }\r\n\r\n    for (i = arr.length - 1; i > 0; i--) {\r\n        animations.push([\"swapFinal\",0,arr[i]]);\r\n        animations.push([\"swapFinal\",i,arr[0]]);\r\n        swap(arr, 0, i);\r\n        array_length--;\r\n      \r\n      \r\n        heap_root(arr, 0);\r\n    }\r\n    return [animations,arr];\r\n}\r\n\r\n/*\r\n2 8 3 5 9\r\n        2\r\n       /  \\\r\n       8   3\r\n      / \\\r\n      5 9\r\n\r\n*/","export function mergeSort(array){\r\n    const animations=[];\r\n    const helper=[];\r\n    if(array.length<=1) return array;\r\n    const auxiliaryArray=array.slice();\r\n    mergeSortHelper(0,array.length-1,auxiliaryArray,helper,animations);\r\n    return [animations,auxiliaryArray];\r\n}\r\nfunction mergeSortHelper(\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    helper,\r\n    animations\r\n)\r\n{\r\n    if(startIdx<endIdx){\r\n    let middleIdx=Math.floor((startIdx+endIdx)/2);\r\n    mergeSortHelper(startIdx,middleIdx,auxiliaryArray,helper,animations);\r\n    mergeSortHelper(middleIdx+1,endIdx,auxiliaryArray,helper,animations);\r\n    merge(startIdx,middleIdx,endIdx,auxiliaryArray,helper,animations);\r\n    }\r\n}\r\nfunction merge(\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    helper,\r\n    animations\r\n){\r\n    let current=startIdx;\r\n    for(let i=startIdx;i<=endIdx;i++){\r\n        helper[i]=auxiliaryArray[i];\r\n    }\r\n    let low=startIdx;\r\n    let mid=middleIdx+1;\r\n    while(low<=middleIdx && mid<=endIdx){\r\n        animations.push([low,mid]);\r\n        animations.push([low,mid]);\r\n        if(helper[low]<helper[mid]){\r\n            animations.push([current,helper[low]]);\r\n            auxiliaryArray[current++]=helper[low++];\r\n        }\r\n        else{\r\n            animations.push([current,helper[mid]]);\r\n            auxiliaryArray[current++]=helper[mid++];\r\n        }\r\n    }\r\n    let remaining=middleIdx-low;\r\n    for(let j=0;j<=remaining;j++){\r\n        animations.push([(low+j),(low+j)]);\r\n        animations.push([(low+j),(low+j)]);\r\n        animations.push([current,helper[low+j]]);\r\n        auxiliaryArray[current++]=helper[low+j];\r\n    }\r\n    remaining=endIdx-mid;\r\n    for(let l=0;l<=remaining;l++){\r\n        animations.push([(mid+l),(mid+l)]);\r\n        animations.push([(mid+l),(mid+l)]);\r\n        animations.push([current,helper[mid+l]]);\r\n        auxiliaryArray[current++]=helper[mid+l];\r\n    }\r\n}","export function quickSort(array){\r\n    let animations=[];\r\n    let auxiliary=array.slice();\r\n    quickSortHelper(auxiliary,0,auxiliary.length-1,animations);\r\n    return [animations,auxiliary];\r\n}\r\nfunction quickSortHelper(auxiliary,startIndex,endIndex,animations)\r\n{\r\n    let pivotIndex;\r\n    if(startIndex<endIndex){\r\n        pivotIndex=partition(auxiliary,startIndex,endIndex,animations);\r\n        quickSortHelper(auxiliary,startIndex,pivotIndex-1,animations);\r\n        quickSortHelper(auxiliary,pivotIndex+1,endIndex,animations);\r\n    }\r\n\r\n}\r\nfunction partition(auxiliary,startIndex,endIndex,animations) \r\n{\r\n    let pivotIndex=startIndex;\r\n    let pivot=auxiliary[endIndex];\r\n    for(let i=startIndex;i<endIndex;i++){\r\n        animations.push([i,endIndex,pivotIndex]);\r\n        animations.push([i,endIndex,pivotIndex]);\r\n        if(auxiliary[i]<=pivot){\r\n            animations.push([i,auxiliary[pivotIndex]]);\r\n            animations.push([pivotIndex,auxiliary[i]]);\r\n            swap(auxiliary,i,pivotIndex);\r\n            pivotIndex++;\r\n        }\r\n        else{\r\n            animations.push([-1,-1,-1]);\r\n            animations.push([-1,-1,-1]);\r\n        }\r\n        animations.push([-1,-1,-1]);\r\n        animations.push([-1,-1,-1]);\r\n    }\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([-1,-1,-1]);\r\n    animations.push([pivotIndex,auxiliary[endIndex]]);\r\n    animations.push([endIndex,auxiliary[pivotIndex]]);\r\n    swap(auxiliary,pivotIndex,endIndex);\r\n    return pivotIndex;\r\n}\r\nfunction swap(auxiliary,firstIndex,secondIndex){\r\n    let temp=auxiliary[firstIndex];\r\n    auxiliary[firstIndex]=auxiliary[secondIndex];\r\n    auxiliary[secondIndex]=temp;\r\n}","export function selectionSort(array){\r\n    const animations=[];\r\n    for(let i=0;i<array.length-1;i++){\r\n        let minidx=i;\r\n        for(let j=i+1;j<array.length;j++){\r\n            animations.push([\"compare1\",minidx,j]);\r\n            animations.push([\"compare2\",minidx,j]);\r\n            if(array[minidx]>array[j]){\r\n                minidx=j;\r\n            }\r\n        }\r\n        animations.push([\"swap\",minidx,array[i]]);\r\n        animations.push([\"swap\",i,array[minidx]]);\r\n        swap(minidx,i,array);\r\n    }\r\n    return [animations,array];\r\n}\r\nfunction swap(minidx,i,array){\r\n    let temp=array[i];\r\n    array[i]=array[minidx];\r\n    array[minidx]=temp;\r\n}","import React, { Component } from 'react';\r\nimport './SortingVisualizer.css';\r\nimport {mergeSort} from './sortingAlgorithms/mergeSort';\r\nimport {bubbleSort} from './sortingAlgorithms/bubbleSort';\r\nimport {quickSort} from './sortingAlgorithms/quickSort';\r\nimport {insertionSort} from './sortingAlgorithms/insertionSort';\r\nimport {selectionSort} from './sortingAlgorithms/selectionSort';\r\nimport {heapSort} from  './sortingAlgorithms/heapSort';\r\nclass SortingVisualizer extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            array: [],\r\n            bgColor:\"\",\r\n            backgroud:'radial-gradient(circle, rgba(146,37,189,1) 9%, rgba(146,37,189,1) 40%, rgba(144,40,190,1) 42%, rgba(116,85,205,1) 85%)'\r\n        }\r\n    }\r\n    componentDidMount(){\r\n         this.resetArray();\r\n     }\r\n     resetArray(){\r\n         const array=[];\r\n         for(let i=0;i<250;i++){\r\n             array.push(randomIntFromInterval(15,650));\r\n         }\r\n         this.setState({array:array,bgColor:this.state.backgroud});\r\n     }\r\n     disableButtons(){\r\n        document.getElementById(\"generateArray\").disabled=true;\r\n        document.getElementById(\"bubbleSort\").disabled=true;\r\n        document.getElementById(\"selectionSort\").disabled=true;\r\n        document.getElementById(\"insertionSort\").disabled=true;\r\n        document.getElementById(\"mergeSort\").disabled=true;\r\n        document.getElementById(\"quickSort\").disabled=true;\r\n        document.getElementById(\"heapSort\").disabled=true;\r\n     }\r\n     restoreButtons(){\r\n        document.getElementById(\"generateArray\").disabled=false;\r\n        document.getElementById(\"bubbleSort\").disabled=false;\r\n        document.getElementById(\"selectionSort\").disabled=false;\r\n        document.getElementById(\"insertionSort\").disabled=false;\r\n        document.getElementById(\"mergeSort\").disabled=false;\r\n        document.getElementById(\"quickSort\").disabled=false;\r\n        document.getElementById(\"heapSort\").disabled=false; \r\n     }\r\n     selectionSort(){\r\n         this.disableButtons();\r\n         const [animations,array]=selectionSort(this.state.array);\r\n         for(let i=0;i<animations.length;i++){\r\n             const colorChange=(animations[i][0]===\"compare1\" || animations[i][0]===\"compare2\");\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             if(colorChange){\r\n                 const [temp,barOne,barTwo]=animations[i];\r\n                 setTimeout(()=>{\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    const barTwoStyle=arrayBars[barTwo].style;\r\n                    const color=(temp===\"compare1\")?'red':'#3498DB';\r\n                     barOneStyle.background=color;\r\n                     barTwoStyle.background=color;\r\n                 },i*2);\r\n             }\r\n             else{\r\n                 const[temp,barOne,newHeight]=animations[i];\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 setTimeout(()=>{\r\n                     barOneStyle.height=newHeight+'px';\r\n                 },i*2);\r\n             }\r\n         }\r\n         const timeout=animations.length*2;\r\n         setTimeout(()=>{\r\n             this.restoreButtons();\r\n             this.setState({array:array})\r\n         },timeout+100);\r\n     }\r\n     mergeSort(){\r\n         this.disableButtons();\r\n        // const sorted=mergeSort(this.state.array);\r\n        // const jsorted=this.state.array.sort(function(a,b){return a-b});\r\n        // console.log(arrayAreEqual(sorted,jsorted));\r\n        const [animations,array]=mergeSort(this.state.array);\r\n         for(let i=0;i<animations.length;i++){\r\n             const arrayBars= document.getElementsByClassName('array-bar');\r\n             const colorChange=i%3!==2;\r\n             if(colorChange){\r\n                 const [barOne,barTwo] = animations[i];\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 const barTwoStyle=arrayBars[barTwo].style;\r\n                 const color=i%3===0?'red':'#3498DB';\r\n                 setTimeout(()=>{\r\n                    barOneStyle.background=color;\r\n                    barTwoStyle.backgroud=color;\r\n                 },i*3.5);\r\n             }\r\n             else{\r\n                 setTimeout(()=>{\r\n                    const[barOne,newHeight]=animations[i];\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    barOneStyle.height=newHeight+'px';\r\n                 },i*3.5)\r\n             }\r\n         }\r\n         const timeout=animations.length*3.5;\r\n         setTimeout(()=>{\r\n            this.restoreButtons();\r\n            this.setState({array:array,bgColor:this.state.backgroud});\r\n        },timeout+100);\r\n    }\r\n     bubbleSort(){\r\n         this.disableButtons();\r\n         //const sorted=bubbleSort(this.state.array);\r\n         //const jsorted=this.state.array.sort(function(a,b){return a-b});\r\n         //console.log(arrayAreEqual(sorted,jsorted));\r\n         const [animations,array]=bubbleSort(this.state.array);\r\n         //console.log(animations);\r\n         for(let i=0;i<animations.length;i++){\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             const colorChange= i%4===0 || i%4===1;\r\n             if(colorChange===true){\r\n                 const [barOne,barTwo]=animations[i];\r\n                 if(barOne===-1){\r\n                     continue;\r\n                 }\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 const barTwoStyle=arrayBars[barTwo].style;\r\n                 const color=i%4===0?'red':'#3498DB';\r\n                 setTimeout(()=>{\r\n                     barOneStyle.backgroud=color;\r\n                     barTwoStyle.background=color;\r\n                 },i*3);\r\n             }\r\n             else{\r\n                 setTimeout(()=>{\r\n                     const[barOne,newHeight]=animations[i];\r\n                     if(barOne!==-1){\r\n                     const barOneStyle=arrayBars[barOne].style;\r\n                     barOneStyle.height=newHeight+'px';\r\n                     }\r\n                 },i*3);\r\n             }\r\n         }\r\n         const timeout=animations.length*3;\r\n         setTimeout(()=>{\r\n            this.restoreButtons();\r\n            this.setState({array:array})\r\n        },timeout+100);\r\n     }\r\n     quickSort(){\r\n         this.disableButtons();\r\n         const [animations,array]=quickSort(this.state.array);\r\n         for(let i=0;i<animations.length-1;i++){\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             const colorChange = (i%6===0) || (i%6===1);\r\n             if(colorChange===true){\r\n                 const[barOne,barTwo,barThree]= animations[i];\r\n                 if(barOne===-1 || barTwo===-1){\r\n                     continue;\r\n                 }\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 const barTwoStyle=arrayBars[barTwo].style;\r\n                 const barThreeStyle=arrayBars[barThree].style;\r\n                 let color=i%6===0?'red':'#3498DB';\r\n                 let pivotColor=i%6===0?'yellow':'#3498DB';\r\n                 setTimeout(()=>{\r\n                     barOneStyle.background=color;\r\n                     barTwoStyle.background=color;\r\n                     barThreeStyle.background=pivotColor;\r\n                 },i*3);\r\n             }\r\n             else{\r\n                 const[barOne,newHeight]=animations[i];\r\n                 if(barOne===-1 ){\r\n                     continue;\r\n                 }\r\n                 const barOneStyle=arrayBars[barOne].style;\r\n                 setTimeout(()=>{\r\n                     barOneStyle.height=newHeight+'px';\r\n                 },i*3);\r\n             }\r\n         }\r\n         const timeout=animations.length*3;\r\n         setTimeout(()=>{\r\n            this.restoreButtons();\r\n            this.setState({array:array});\r\n        },timeout+100);\r\n     }\r\n     insertionSort(){\r\n         this.disableButtons();\r\n         const [animations,array]=insertionSort(this.state.array);\r\n         for(let i=0;i<animations.length;i++){\r\n             const colorChange=(animations[i][0]===\"comparison1\" || animations[i][0]===\"comparison2\");\r\n             const arrayBars=document.getElementsByClassName('array-bar');\r\n             if(colorChange){\r\n                 const[temp,barOne,barTwo]=animations[i];\r\n                 const color=(temp===\"comparison1\")?'red':'#3498DB';\r\n                 setTimeout(()=>{\r\n                     const barOneStyle=arrayBars[barOne].style;\r\n                     const barTwoStyle=arrayBars[barTwo].style;\r\n                     barOneStyle.background=color;\r\n                     barTwoStyle.background=color;                     \r\n                 },i*3)\r\n             }\r\n             else{\r\n                 const[temp,barOne,newHeight]=animations[i];\r\n                 setTimeout(()=>{\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    barOneStyle.height=newHeight+'px';\r\n                 },i*3);\r\n             }\r\n         }\r\n         const timeout=animations.length*3;\r\n         setTimeout(()=>{\r\n            this.restoreButtons();\r\n            this.setState({array:array})\r\n        },timeout+100);\r\n     }\r\n     heapSort(){\r\n        // const arr= heapSort(this.state.array);\r\n        // const jsorted=this.state.array.sort(function(a,b){return a-b});\r\n        // console.log(arrayAreEqual(arr,jsorted));\r\n        this.disableButtons();\r\n        const [animations,array]=heapSort(this.state.array);\r\n        console.log(animations);\r\n        for(let i=0;i<animations.length;i++){\r\n            const colorChange=(animations[i][0]===\"compare1\" || animations[i][0]===\"compare2\");\r\n            const arrayBars=document.getElementsByClassName('array-bar');\r\n            if(colorChange){\r\n                const[temp,barOne,barTwo]=animations[i];\r\n                const color=(temp===\"compare1\")?'red':'#3498DB';\r\n                setTimeout(()=>{\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    const barTwoStyle=arrayBars[barTwo].style;\r\n                    barOneStyle.background=color;\r\n                    barTwoStyle.background=color;                     \r\n                },i*3.5)\r\n            }\r\n            else if(animations[i][0]===\"swap\" || animations[i][0]===\"swapFinal\"){\r\n                const[temp,barOne,newHeight]=animations[i];\r\n                 setTimeout(()=>{\r\n                    const barOneStyle=arrayBars[barOne].style;\r\n                    barOneStyle.height=newHeight+'px';\r\n                    if(temp===\"swapFinal\") barOneStyle.backgroundColor=\"#3a58f0\";\r\n                 },i*3.5);\r\n            }\r\n        }\r\n        setTimeout(()=>{\r\n            this.restoreButtons();\r\n            this.setState({array:array});\r\n        },animations.length*3.5)\r\n     }\r\n    render() {\r\n        const {array,bgColor}=this.state;\r\n        let styles={\r\n            height:'60px',\r\n            width:'85vw',\r\n            overflowY:'hidden',\r\n            overflowX:'hidden',\r\n            background:'linear-gradient(90deg, rgba(243,243,255,1) 8%, rgba(169,232,242,1) 100%)',\r\n            display:'inline-block',\r\n            borderRadius:'50px',\r\n            boxShadow:'50px',\r\n        };\r\n        return (\r\n            <div className=\"array-container\">\r\n                {\r\n                    array.map((value,idx) => (\r\n                        <div \r\n                        className=\"array-bar animated bounceInUp delay 2s\"\r\n                        key={idx}\r\n                        style={{height: value,background:bgColor}}></div>\r\n                    ))\r\n                }\r\n                <div className=\"card\" style={styles} >\r\n                <button id=\"generateArray\" \r\n                className=\"btn btn-success m-2 animated slideInLeft delay 9s\" \r\n                style={{borderRadius:'30px'}} onClick={()=>this.resetArray()} >Generate new Array</button>\r\n        \r\n                <button id=\"mergeSort\" \r\n                className=\"btn btn-info m-2 animated slideInLeft delay 7s\" \r\n                style={{borderRadius:'30px'}} onClick={()=>this.mergeSort()} >Merge Sort</button>\r\n                \r\n                <button id=\"bubbleSort\" \r\n                className=\"btn btn-info m-2 animated slideInLeft delay 5s\" \r\n                style={{borderRadius:'30px'}} onClick={()=>this.bubbleSort()} >Bubble Sort</button>\r\n                \r\n                <button id=\"quickSort\" \r\n                className=\"btn btn-info m-2 animated slideInLeft delay 3s\" \r\n                style={{borderRadius:'30px'}} onClick={()=>this.quickSort()} >Quick Sort</button>\r\n                \r\n                <button id=\"insertionSort\" \r\n                className=\"btn btn-info m-2 animated slideInLeft delay 1s\" \r\n                style={{borderRadius:'30px'}} \r\n                onClick={()=>this.insertionSort()}>Insertion Sort</button>\r\n                \r\n                <button id=\"selectionSort\" \r\n                className=\"btn btn-info m-2 animated slideInLeft delay 0s\" \r\n                style={{borderRadius:'30px'}} onClick={()=>this.selectionSort()} >Selection Sort</button>\r\n\r\n                <button id=\"heapSort\" \r\n                className=\"btn btn-info m-2 animated slideInLeft delay 0s\" \r\n                style={{borderRadius:'30px'}} onClick={()=>this.heapSort()} >Heap Sort</button>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min,max){\r\n    //min and max included\r\n    return Math.floor(Math.random()*(max-min+1)+min);\r\n}\r\n// Testing the algorithms\r\nfunction arrayAreEqual(sorted,jsorted){\r\n    if(sorted.length!==jsorted.length){\r\n        return false;\r\n    };\r\n    let i=0;\r\n    let j=0;\r\n    while(i<sorted.length && j<jsorted.length){\r\n        if(sorted[i]!==jsorted[j])\r\n        return false;\r\n        i++;\r\n        j++;\r\n    }\r\n    return true;\r\n} \r\n \r\nexport default SortingVisualizer;","export function bubbleSort(array){\r\nconst animations=[];\r\nfor(let i=0;i<array.length-1;i++){\r\n    for(let j=0;j<array.length-i-1;j++){\r\n        animations.push([j,j+1]);\r\n        animations.push([j,j+1]);\r\n        if(array[j]>array[j+1]){\r\n            animations.push([j,array[j+1]]);\r\n            animations.push([j+1,array[j]]);\r\n            let temp=array[j+1];\r\n            array[j+1]=array[j];\r\n            array[j]=temp;\r\n        }\r\n        else{\r\n            animations.push([-1,-1]);\r\n            animations.push([-1,-1]);\r\n        }\r\n    }\r\n}\r\nreturn [animations,array];\r\n}\r\n// 3 4 2 1 5 6\r\n//{0,3}{1,4}","export function insertionSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    for(let i=1;i<array.length;i++){\r\n        let key=array[i];\r\n        let j=i-1;\r\n        animations.push([\"comparison1\",j,i]);\r\n        animations.push([\"comparison2\",j,i]);\r\n        while(j>=0 && array[j]>key){\r\n            animations.push([\"overwrite\",j+1,array[j]]);\r\n            array[j+1]=array[j];\r\n            j=j-1;\r\n            if(j>=0){\r\n                animations.push([\"comparison1\",j,i]);\r\n                animations.push([\"comparison2\",j,i]);\r\n            }\r\n        }\r\n        animations.push([\"overwrite\",j+1,key]);\r\n        array[j+1]=key;\r\n    }\r\n    return [animations,array];\r\n}","import React, { Component } from 'react';\r\nimport {Button,Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nclass PopUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            modal:true,\r\n        }\r\n    }\r\n    toggle() \r\n        {\r\n            this.setState({modal:!this.state.modal});\r\n        }\r\n    render() {\r\n        let styles={\r\n            position:\"absolute\",\r\n            textAlign:\"center\",\r\n            left:\"50%\",\r\n            top:\"50%\",\r\n            width:\"40vw\",\r\n            transform:\"translate(-50%,-50%)\",\r\n        }\r\n        return ( \r\n            <div>\r\n                <Modal style={styles} toggle={()=>this.toggle()} isOpen={this.state.modal}>\r\n                    <ModalHeader style={{fontFamily: \"'Anton', sans-serif\",fontWeight:'900'}}>Sorting Algorithm</ModalHeader>\r\n                    <ModalBody style={{fontFamily:\"'Rajdhani', sans-serif\"}}>\r\n                        Hey!<br></br>\r\n                        This is a Sorting Algorithms Visualizer built using reactjs.\r\n                        You can see how some of the most famous sorting algorithms work\r\n                        i.e.<br></br>\r\n                        <code>Bubble Sort, Merge Sort, Insertion Sort, Quick Sort, Selection Sort</code><br></br>\r\n                        You can generate new array using \"Generate New Array\" button everytime and choose your sorting algorithm\r\n                        to sort the bars and see how it is done.\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button onClick={()=>this.toggle()} color=\"danger\" style={{width:'60px',right:'0',textAlign:'center'}}>Close</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PopUp;","import {Component} from 'react';\r\nimport React from 'react';\r\nimport SortingVisualizer from './SortingVisualizer';\r\nimport './bootstrap/dist/css/bootstrap.min.css'\r\nimport PopUp from './Popup.jsx'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() { \r\n    return ( \r\n      <div className=\"App \">\r\n      <SortingVisualizer></SortingVisualizer>\r\n      <PopUp/>\r\n    </div>\r\n     );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}